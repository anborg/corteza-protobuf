syntax = "proto3";

package corredor;

// Executing and listing server-scripts
service ServerScripts {
	// Executes server script
	rpc Exec(ExecRequest) returns (ExecResponse);

	// List of server scripts
	rpc List(ListRequest) returns (ListResponse);
}

// Executing and listing client-scripts
service ClientScripts {
	// Bundles
	rpc Bundle (BundleRequest) returns (BundleResponse);

	// List of client scripts
	rpc List(ListRequest) returns (ListResponse);
}

service Storage {
	// rpc List(path) returns (list of dirs/files);
	// rpc Store(path, content) returns (bool);
	// rpc Delete(path, content) returns (bool);
	// rpc Get(path) returns (file);
}

// ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----

message ExecRequest {
	string name              = 1;
	map<string, string> args = 2;
}

message ExecResponse {
	map<string, string> result = 2;
}

// ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----

message ListRequest {
	// query by name, label, description
	string query = 1;

	// filter by resource - exact match
	string resource = 2;

	ScriptSecurity security = 3;

	// filter by events - script must contain all specified events
	repeated string events = 4;
}

message ListResponse {
	repeated Script scripts = 1;
}

// ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----

message BundleRequest {
	string name = 1;
}

message BundleResponse {
	repeated Bundle bundle = 1;
}

// ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ---- ----

message Script {
	         string name        = 1;
	         string label       = 2;
	         string description = 3;
	         string resource    = 4;
	repeated string events      = 5;
	 ScriptSecurity security    = 6;
	repeated string errors      = 7;
}

message Bundle {
	string name = 1;
	string type = 2;
	string code = 3;
}

enum ScriptSecurity {
	invoker = 0;
	definer = 1;
}
